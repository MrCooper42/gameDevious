/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './works.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from 'ng2-file-upload/file-upload/file-upload.module';
import * as import6 from '../upload/upload.module';
import * as import7 from '@angular/common/src/localization';
import * as import8 from '@angular/forms/src/form_builder';
import * as import9 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import10 from '@angular/core/src/di/injector';
import * as import11 from '@angular/core/src/i18n/tokens';
class WorksModuleInjector extends import0.NgModuleInjector<import1.WorksModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _ReactiveFormsModule_2:import4.ReactiveFormsModule;
  _FileUploadModule_3:import5.FileUploadModule;
  _UploadModule_4:import6.UploadModule;
  _WorksModule_5:import1.WorksModule;
  __NgLocalization_6:import7.NgLocaleLocalization;
  __FormBuilder_7:import8.FormBuilder;
  __RadioControlRegistry_8:import9.RadioControlRegistry;
  constructor(parent:import10.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_6():import7.NgLocaleLocalization {
    if ((this.__NgLocalization_6 == null)) { (this.__NgLocalization_6 = new import7.NgLocaleLocalization(this.parent.get(import11.LOCALE_ID))); }
    return this.__NgLocalization_6;
  }
  get _FormBuilder_7():import8.FormBuilder {
    if ((this.__FormBuilder_7 == null)) { (this.__FormBuilder_7 = new import8.FormBuilder()); }
    return this.__FormBuilder_7;
  }
  get _RadioControlRegistry_8():import9.RadioControlRegistry {
    if ((this.__RadioControlRegistry_8 == null)) { (this.__RadioControlRegistry_8 = new import9.RadioControlRegistry()); }
    return this.__RadioControlRegistry_8;
  }
  createInternal():import1.WorksModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._ReactiveFormsModule_2 = new import4.ReactiveFormsModule();
    this._FileUploadModule_3 = new import5.FileUploadModule();
    this._UploadModule_4 = new import6.UploadModule();
    this._WorksModule_5 = new import1.WorksModule();
    return this._WorksModule_5;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.ReactiveFormsModule)) { return this._ReactiveFormsModule_2; }
    if ((token === import5.FileUploadModule)) { return this._FileUploadModule_3; }
    if ((token === import6.UploadModule)) { return this._UploadModule_4; }
    if ((token === import1.WorksModule)) { return this._WorksModule_5; }
    if ((token === import7.NgLocalization)) { return this._NgLocalization_6; }
    if ((token === import8.FormBuilder)) { return this._FormBuilder_7; }
    if ((token === import9.RadioControlRegistry)) { return this._RadioControlRegistry_8; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const WorksModuleNgFactory:import0.NgModuleFactory<import1.WorksModule> = new import0.NgModuleFactory(WorksModuleInjector,import1.WorksModule);