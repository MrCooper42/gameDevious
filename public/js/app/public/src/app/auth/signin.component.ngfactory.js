/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './signin.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './auth.service';
import * as import9 from '@angular/router/src/router';
import * as import10 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import11 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import13 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/forms/src/directives/default_value_accessor';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import18 from '@angular/forms/src/directives/ng_control';
import * as import19 from '@angular/forms/src/directives/ng_control_status';
import * as import20 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import21 from '@angular/forms/src/directives/control_container';
export class Wrapper_SigninComponent {
    constructor(p0, p1) {
        this._changed = false;
        this.context = new import0.SigninComponent(p0, p1);
    }
    ngOnDetach(view, componentView, el) {
    }
    ngOnDestroy() {
    }
    ngDoCheck(view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    }
    checkHost(view, componentView, el, throwOnChange) {
    }
    handleEvent(eventName, $event) {
        var result = true;
        return result;
    }
    subscribe(view, _eventHandler) {
        this._eventHandler = _eventHandler;
    }
}
var renderType_SigninComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
class View_SigninComponent_Host0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_SigninComponent_Host0, renderType_SigninComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'app-signin', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_SigninComponent0(this.viewUtils, this, 0, this._el_0);
        this._SigninComponent_0_3 = new Wrapper_SigninComponent(this.injectorGet(import8.AuthService, this.parentIndex), this.injectorGet(import9.Router, this.parentIndex));
        this.compView_0.create(this._SigninComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._SigninComponent_0_3.context);
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import0.SigninComponent) && (0 === requestNodeIndex))) {
            return this._SigninComponent_0_3.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        this._SigninComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    }
    destroyInternal() {
        this.compView_0.destroy();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
export const SigninComponentNgFactory = new import7.ComponentFactory('app-signin', View_SigninComponent_Host0, import0.SigninComponent);
const styles_SigninComponent = [];
var renderType_SigninComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_SigninComponent, {});
export class View_SigninComponent0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_SigninComponent0, renderType_SigninComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_38 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        const parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'col-md-8 col-md-offset-2'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'form', import3.EMPTY_INLINE_ARRAY, null);
        this._FormGroupDirective_2_3 = new import10.Wrapper_FormGroupDirective(null, null);
        this._ControlContainer_2_4 = this._FormGroupDirective_2_3.context;
        this._NgControlStatusGroup_2_5 = new import11.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'div', new import3.InlineArray2(2, 'class', 'form-group'), null);
        this._text_5 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_6 = import3.createRenderElement(this.renderer, this._el_4, 'label', new import3.InlineArray2(2, 'for', 'email'), null);
        this._text_7 = this.renderer.createText(this._el_6, 'Email', null);
        this._text_8 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_4, 'input', new import3.InlineArray8(8, 'class', 'form-control', 'formControlName', 'email', 'id', 'email', 'type', 'email'), null);
        this._DefaultValueAccessor_9_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer, new import14.ElementRef(this._el_9));
        this._NG_VALUE_ACCESSOR_9_4 = [this._DefaultValueAccessor_9_3.context];
        this._FormControlName_9_5 = new import13.Wrapper_FormControlName(this._ControlContainer_2_4, null, null, this._NG_VALUE_ACCESSOR_9_4);
        this._NgControl_9_6 = this._FormControlName_9_5.context;
        this._NgControlStatus_9_7 = new import11.Wrapper_NgControlStatus(this._NgControl_9_6);
        this._text_10 = this.renderer.createText(this._el_4, '\n        ', null);
        this._text_11 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_2, 'div', new import3.InlineArray2(2, 'class', 'form-group'), null);
        this._text_13 = this.renderer.createText(this._el_12, '\n            ', null);
        this._el_14 = import3.createRenderElement(this.renderer, this._el_12, 'label', new import3.InlineArray2(2, 'for', 'password'), null);
        this._text_15 = this.renderer.createText(this._el_14, 'Password', null);
        this._text_16 = this.renderer.createText(this._el_12, '\n            ', null);
        this._el_17 = import3.createRenderElement(this.renderer, this._el_12, 'input', new import3.InlineArray8(8, 'class', 'form-control', 'formControlName', 'password', 'id', 'password', 'type', 'password'), null);
        this._DefaultValueAccessor_17_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer, new import14.ElementRef(this._el_17));
        this._NG_VALUE_ACCESSOR_17_4 = [this._DefaultValueAccessor_17_3.context];
        this._FormControlName_17_5 = new import13.Wrapper_FormControlName(this._ControlContainer_2_4, null, null, this._NG_VALUE_ACCESSOR_17_4);
        this._NgControl_17_6 = this._FormControlName_17_5.context;
        this._NgControlStatus_17_7 = new import11.Wrapper_NgControlStatus(this._NgControl_17_6);
        this._text_18 = this.renderer.createText(this._el_12, '\n        ', null);
        this._text_19 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_20 = import3.createRenderElement(this.renderer, this._el_2, 'button', new import3.InlineArray4(4, 'class', 'btn btn-primary', 'type', 'submit'), null);
        this._text_21 = this.renderer.createText(this._el_20, 'Submit', null);
        this._text_22 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_23 = this.renderer.createText(this._el_0, '\n', null);
        this._text_24 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngSubmit', null, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_2));
        this._FormGroupDirective_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_9, new import3.InlineArray4(4, 'input', null, 'blur', null), this.eventHandler(this.handleEvent_9));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_17, new import3.InlineArray4(4, 'input', null, 'blur', null), this.eventHandler(this.handleEvent_17));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._text_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22,
            this._text_23,
            this._text_24
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import15.DefaultValueAccessor) && (9 === requestNodeIndex))) {
            return this._DefaultValueAccessor_9_3.context;
        }
        if (((token === import16.NG_VALUE_ACCESSOR) && (9 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_9_4;
        }
        if (((token === import17.FormControlName) && (9 === requestNodeIndex))) {
            return this._FormControlName_9_5.context;
        }
        if (((token === import18.NgControl) && (9 === requestNodeIndex))) {
            return this._NgControl_9_6;
        }
        if (((token === import19.NgControlStatus) && (9 === requestNodeIndex))) {
            return this._NgControlStatus_9_7.context;
        }
        if (((token === import15.DefaultValueAccessor) && (17 === requestNodeIndex))) {
            return this._DefaultValueAccessor_17_3.context;
        }
        if (((token === import16.NG_VALUE_ACCESSOR) && (17 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_17_4;
        }
        if (((token === import17.FormControlName) && (17 === requestNodeIndex))) {
            return this._FormControlName_17_5.context;
        }
        if (((token === import18.NgControl) && (17 === requestNodeIndex))) {
            return this._NgControl_17_6;
        }
        if (((token === import19.NgControlStatus) && (17 === requestNodeIndex))) {
            return this._NgControlStatus_17_7.context;
        }
        if (((token === import20.FormGroupDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._FormGroupDirective_2_3.context;
        }
        if (((token === import21.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._ControlContainer_2_4;
        }
        if (((token === import19.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 22)))) {
            return this._NgControlStatusGroup_2_5.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_2_0_0 = this.context.myForm;
        this._FormGroupDirective_2_3.check_form(currVal_2_0_0, throwOnChange, false);
        this._FormGroupDirective_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatusGroup_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        this._DefaultValueAccessor_9_3.ngDoCheck(this, this._el_9, throwOnChange);
        const currVal_9_1_0 = 'email';
        this._FormControlName_9_5.check_name(currVal_9_1_0, throwOnChange, false);
        this._FormControlName_9_5.ngDoCheck(this, this._el_9, throwOnChange);
        this._NgControlStatus_9_7.ngDoCheck(this, this._el_9, throwOnChange);
        this._DefaultValueAccessor_17_3.ngDoCheck(this, this._el_17, throwOnChange);
        const currVal_17_1_0 = 'password';
        this._FormControlName_17_5.check_name(currVal_17_1_0, throwOnChange, false);
        this._FormControlName_17_5.ngDoCheck(this, this._el_17, throwOnChange);
        this._NgControlStatus_17_7.ngDoCheck(this, this._el_17, throwOnChange);
        this._NgControlStatusGroup_2_5.checkHost(this, this, this._el_2, throwOnChange);
        this._NgControlStatus_9_7.checkHost(this, this, this._el_9, throwOnChange);
        this._NgControlStatus_17_7.checkHost(this, this, this._el_17, throwOnChange);
        const currVal_38 = !this.context.myForm.valid;
        if (import3.checkBinding(throwOnChange, this._expr_38, currVal_38)) {
            this.renderer.setElementProperty(this._el_20, 'disabled', currVal_38);
            this._expr_38 = currVal_38;
        }
    }
    destroyInternal() {
        this._FormControlName_9_5.ngOnDestroy();
        this._FormControlName_17_5.ngOnDestroy();
        this._FormGroupDirective_2_3.ngOnDestroy();
    }
    handleEvent_2(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._FormGroupDirective_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngSubmit')) {
            const pd_sub_0 = (this.context.onSubmit() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    }
    handleEvent_9(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_9_3.handleEvent(eventName, $event) && result);
        return result;
    }
    handleEvent_17(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_17_3.handleEvent(eventName, $event) && result);
        return result;
    }
}
//# sourceMappingURL=signin.component.ngfactory.js.map