/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './authentication.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './auth.service';
import * as import9 from '../../../../node_modules/@angular/router/src/directives/router_link_active.ngfactory';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '../../../../node_modules/@angular/router/src/directives/router_link.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '../../../../node_modules/@angular/router/src/directives/router_outlet.ngfactory';
import * as import15 from '@angular/router/src/router';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/router/src/router_state';
import * as import18 from '@angular/common/src/location/location_strategy';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/router/src/router_outlet_map';
import * as import21 from '@angular/core/src/linker/component_factory_resolver';
import * as import22 from '@angular/router/src/directives/router_link';
import * as import23 from '@angular/router/src/directives/router_link_active';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '@angular/router/src/directives/router_outlet';
export class Wrapper_AuthenticationComponent {
    constructor(p0) {
        this._changed = false;
        this.context = new import0.AuthenticationComponent(p0);
    }
    ngOnDetach(view, componentView, el) {
    }
    ngOnDestroy() {
    }
    ngDoCheck(view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    }
    checkHost(view, componentView, el, throwOnChange) {
    }
    handleEvent(eventName, $event) {
        var result = true;
        return result;
    }
    subscribe(view, _eventHandler) {
        this._eventHandler = _eventHandler;
    }
}
var renderType_AuthenticationComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
class View_AuthenticationComponent_Host0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_AuthenticationComponent_Host0, renderType_AuthenticationComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'app-authentication', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_AuthenticationComponent0(this.viewUtils, this, 0, this._el_0);
        this._AuthenticationComponent_0_3 = new Wrapper_AuthenticationComponent(this.injectorGet(import8.AuthService, this.parentIndex));
        this.compView_0.create(this._AuthenticationComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._AuthenticationComponent_0_3.context);
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import0.AuthenticationComponent) && (0 === requestNodeIndex))) {
            return this._AuthenticationComponent_0_3.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        this._AuthenticationComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    }
    destroyInternal() {
        this.compView_0.destroy();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
export const AuthenticationComponentNgFactory = new import7.ComponentFactory('app-authentication', View_AuthenticationComponent_Host0, import0.AuthenticationComponent);
const styles_AuthenticationComponent = [];
var renderType_AuthenticationComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_AuthenticationComponent, {});
export class View_AuthenticationComponent0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_AuthenticationComponent0, renderType_AuthenticationComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._arr_35 = import3.pureProxy1((p0) => {
            return [p0];
        });
    }
    createInternal(rootSelector) {
        const parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'header', new import3.InlineArray2(2, 'class', 'row spacing'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_1, 'nav', new import3.InlineArray2(2, 'class', 'col-md-8 col-md-offset-2'), null);
        this._text_4 = this.renderer.createText(this._el_3, '\n        ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_3, 'ul', new import3.InlineArray2(2, 'class', 'nav nav-tabs'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n          ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_5, 'li', new import3.InlineArray2(2, 'routerLinkActive', 'active'), null);
        this._RouterLinkActive_7_3 = new import9.Wrapper_RouterLinkActive(this.parentView.injectorGet(import15.Router, this.parentIndex), new import16.ElementRef(this._el_7), this.renderer);
        this._query_RouterLink_7_0 = new import10.QueryList();
        this._query_RouterLinkWithHref_7_1 = new import10.QueryList();
        this._el_8 = import3.createRenderElement(this.renderer, this._el_7, 'a', import3.EMPTY_INLINE_ARRAY, null);
        this._RouterLinkWithHref_8_3 = new import11.Wrapper_RouterLinkWithHref(this.parentView.injectorGet(import15.Router, this.parentIndex), this.parentView.injectorGet(import17.ActivatedRoute, this.parentIndex), this.parentView.injectorGet(import18.LocationStrategy, this.parentIndex));
        this._text_9 = this.renderer.createText(this._el_8, 'Signup', null);
        this._text_10 = this.renderer.createText(this._el_5, '\n          ', null);
        this._anchor_11 = this.renderer.createTemplateAnchor(this._el_5, null);
        this._vc_11 = new import12.ViewContainer(11, 5, this, this._anchor_11);
        this._TemplateRef_11_5 = new import19.TemplateRef_(this, 11, this._anchor_11);
        this._NgIf_11_6 = new import13.Wrapper_NgIf(this._vc_11.vcRef, this._TemplateRef_11_5);
        this._text_12 = this.renderer.createText(this._el_5, '\n          ', null);
        this._anchor_13 = this.renderer.createTemplateAnchor(this._el_5, null);
        this._vc_13 = new import12.ViewContainer(13, 5, this, this._anchor_13);
        this._TemplateRef_13_5 = new import19.TemplateRef_(this, 13, this._anchor_13);
        this._NgIf_13_6 = new import13.Wrapper_NgIf(this._vc_13.vcRef, this._TemplateRef_13_5);
        this._text_14 = this.renderer.createText(this._el_5, '\n        ', null);
        this._text_15 = this.renderer.createText(this._el_3, '\n      ', null);
        this._text_16 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_17 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_18 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'row spacing'), null);
        this._text_19 = this.renderer.createText(this._el_18, '\n      ', null);
        this._el_20 = import3.createRenderElement(this.renderer, this._el_18, 'router-outlet', import3.EMPTY_INLINE_ARRAY, null);
        this._vc_20 = new import12.ViewContainer(20, 18, this, this._el_20);
        this._RouterOutlet_20_5 = new import14.Wrapper_RouterOutlet(this.parentView.injectorGet(import20.RouterOutletMap, this.parentIndex), this._vc_20.vcRef, this.parentView.injectorGet(import21.ComponentFactoryResolver, this.parentIndex), null);
        this._text_21 = this.renderer.createText(this._el_18, '\n    ', null);
        this._text_22 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_8, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_8));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._anchor_11,
            this._text_12,
            this._anchor_13,
            this._text_14,
            this._text_15,
            this._text_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22
        ]), [disposable_0]);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import22.RouterLinkWithHref) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._RouterLinkWithHref_8_3.context;
        }
        if (((token === import23.RouterLinkActive) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._RouterLinkActive_7_3.context;
        }
        if (((token === import19.TemplateRef) && (11 === requestNodeIndex))) {
            return this._TemplateRef_11_5;
        }
        if (((token === import24.NgIf) && (11 === requestNodeIndex))) {
            return this._NgIf_11_6.context;
        }
        if (((token === import19.TemplateRef) && (13 === requestNodeIndex))) {
            return this._TemplateRef_13_5;
        }
        if (((token === import24.NgIf) && (13 === requestNodeIndex))) {
            return this._NgIf_13_6.context;
        }
        if (((token === import25.RouterOutlet) && (20 === requestNodeIndex))) {
            return this._RouterOutlet_20_5.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_7_0_0 = 'active';
        this._RouterLinkActive_7_3.check_routerLinkActive(currVal_7_0_0, throwOnChange, false);
        this._RouterLinkActive_7_3.ngDoCheck(this, this._el_7, throwOnChange);
        const currVal_8_0_0 = this._arr_35('signup');
        this._RouterLinkWithHref_8_3.check_routerLink(currVal_8_0_0, throwOnChange, false);
        this._RouterLinkWithHref_8_3.ngDoCheck(this, this._el_8, throwOnChange);
        const currVal_11_0_0 = !this.context.isLoggedIn();
        this._NgIf_11_6.check_ngIf(currVal_11_0_0, throwOnChange, false);
        this._NgIf_11_6.ngDoCheck(this, this._anchor_11, throwOnChange);
        const currVal_13_0_0 = this.context.isLoggedIn();
        this._NgIf_13_6.check_ngIf(currVal_13_0_0, throwOnChange, false);
        this._NgIf_13_6.ngDoCheck(this, this._anchor_13, throwOnChange);
        this._RouterOutlet_20_5.ngDoCheck(this, this._el_20, throwOnChange);
        this._vc_11.detectChangesInNestedViews(throwOnChange);
        this._vc_13.detectChangesInNestedViews(throwOnChange);
        this._vc_20.detectChangesInNestedViews(throwOnChange);
        if (!throwOnChange) {
            if (this._query_RouterLink_7_0.dirty) {
                this._query_RouterLink_7_0.reset([]);
                this._RouterLinkActive_7_3.context.links = this._query_RouterLink_7_0;
                this._query_RouterLink_7_0.notifyOnChanges();
            }
            if (this._query_RouterLinkWithHref_7_1.dirty) {
                this._query_RouterLinkWithHref_7_1.reset([this._RouterLinkWithHref_8_3.context]);
                this._RouterLinkActive_7_3.context.linksWithHrefs = this._query_RouterLinkWithHref_7_1;
                this._query_RouterLinkWithHref_7_1.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._RouterLinkActive_7_3.context.ngAfterContentInit();
            }
        }
        this._RouterLinkWithHref_8_3.checkHost(this, this, this._el_8, throwOnChange);
    }
    destroyInternal() {
        this._vc_11.destroyNestedViews();
        this._vc_13.destroyNestedViews();
        this._vc_20.destroyNestedViews();
        this._RouterLinkWithHref_8_3.ngOnDestroy();
        this._RouterLinkActive_7_3.ngOnDestroy();
        this._RouterOutlet_20_5.ngOnDestroy();
    }
    createEmbeddedViewInternal(nodeIndex) {
        if ((nodeIndex == 11)) {
            return new View_AuthenticationComponent1(this.viewUtils, this, 11, this._anchor_11, this._vc_11);
        }
        if ((nodeIndex == 13)) {
            return new View_AuthenticationComponent2(this.viewUtils, this, 13, this._anchor_13, this._vc_13);
        }
        return null;
    }
    handleEvent_8(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._RouterLinkWithHref_8_3.handleEvent(eventName, $event) && result);
        return result;
    }
}
class View_AuthenticationComponent1 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_AuthenticationComponent1, renderType_AuthenticationComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._arr_7 = import3.pureProxy1((p0) => {
            return [p0];
        });
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'li', new import3.InlineArray2(2, 'routerLinkActive', 'active'), null);
        this._RouterLinkActive_0_3 = new import9.Wrapper_RouterLinkActive(this.parentView.parentView.injectorGet(import15.Router, this.parentView.parentIndex), new import16.ElementRef(this._el_0), this.renderer);
        this._query_RouterLink_0_0 = new import10.QueryList();
        this._query_RouterLinkWithHref_0_1 = new import10.QueryList();
        this._el_1 = import3.createRenderElement(this.renderer, this._el_0, 'a', import3.EMPTY_INLINE_ARRAY, null);
        this._RouterLinkWithHref_1_3 = new import11.Wrapper_RouterLinkWithHref(this.parentView.parentView.injectorGet(import15.Router, this.parentView.parentIndex), this.parentView.parentView.injectorGet(import17.ActivatedRoute, this.parentView.parentIndex), this.parentView.parentView.injectorGet(import18.LocationStrategy, this.parentView.parentIndex));
        this._text_2 = this.renderer.createText(this._el_1, 'Signin', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_1));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._el_1,
            this._text_2
        ]), [disposable_0]);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import22.RouterLinkWithHref) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 2)))) {
            return this._RouterLinkWithHref_1_3.context;
        }
        if (((token === import23.RouterLinkActive) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) {
            return this._RouterLinkActive_0_3.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_0_0_0 = 'active';
        this._RouterLinkActive_0_3.check_routerLinkActive(currVal_0_0_0, throwOnChange, false);
        this._RouterLinkActive_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        const currVal_1_0_0 = this._arr_7('signin');
        this._RouterLinkWithHref_1_3.check_routerLink(currVal_1_0_0, throwOnChange, false);
        this._RouterLinkWithHref_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        if (!throwOnChange) {
            if (this._query_RouterLink_0_0.dirty) {
                this._query_RouterLink_0_0.reset([]);
                this._RouterLinkActive_0_3.context.links = this._query_RouterLink_0_0;
                this._query_RouterLink_0_0.notifyOnChanges();
            }
            if (this._query_RouterLinkWithHref_0_1.dirty) {
                this._query_RouterLinkWithHref_0_1.reset([this._RouterLinkWithHref_1_3.context]);
                this._RouterLinkActive_0_3.context.linksWithHrefs = this._query_RouterLinkWithHref_0_1;
                this._query_RouterLinkWithHref_0_1.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._RouterLinkActive_0_3.context.ngAfterContentInit();
            }
        }
        this._RouterLinkWithHref_1_3.checkHost(this, this, this._el_1, throwOnChange);
    }
    destroyInternal() {
        this._RouterLinkWithHref_1_3.ngOnDestroy();
        this._RouterLinkActive_0_3.ngOnDestroy();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
    handleEvent_1(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._RouterLinkWithHref_1_3.handleEvent(eventName, $event) && result);
        return result;
    }
}
class View_AuthenticationComponent2 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_AuthenticationComponent2, renderType_AuthenticationComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._arr_7 = import3.pureProxy1((p0) => {
            return [p0];
        });
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'li', new import3.InlineArray2(2, 'routerLinkActive', 'active'), null);
        this._RouterLinkActive_0_3 = new import9.Wrapper_RouterLinkActive(this.parentView.parentView.injectorGet(import15.Router, this.parentView.parentIndex), new import16.ElementRef(this._el_0), this.renderer);
        this._query_RouterLink_0_0 = new import10.QueryList();
        this._query_RouterLinkWithHref_0_1 = new import10.QueryList();
        this._el_1 = import3.createRenderElement(this.renderer, this._el_0, 'a', import3.EMPTY_INLINE_ARRAY, null);
        this._RouterLinkWithHref_1_3 = new import11.Wrapper_RouterLinkWithHref(this.parentView.parentView.injectorGet(import15.Router, this.parentView.parentIndex), this.parentView.parentView.injectorGet(import17.ActivatedRoute, this.parentView.parentIndex), this.parentView.parentView.injectorGet(import18.LocationStrategy, this.parentView.parentIndex));
        this._text_2 = this.renderer.createText(this._el_1, 'Logout', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_1));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._el_1,
            this._text_2
        ]), [disposable_0]);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import22.RouterLinkWithHref) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 2)))) {
            return this._RouterLinkWithHref_1_3.context;
        }
        if (((token === import23.RouterLinkActive) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) {
            return this._RouterLinkActive_0_3.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_0_0_0 = 'active';
        this._RouterLinkActive_0_3.check_routerLinkActive(currVal_0_0_0, throwOnChange, false);
        this._RouterLinkActive_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        const currVal_1_0_0 = this._arr_7('logout');
        this._RouterLinkWithHref_1_3.check_routerLink(currVal_1_0_0, throwOnChange, false);
        this._RouterLinkWithHref_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        if (!throwOnChange) {
            if (this._query_RouterLink_0_0.dirty) {
                this._query_RouterLink_0_0.reset([]);
                this._RouterLinkActive_0_3.context.links = this._query_RouterLink_0_0;
                this._query_RouterLink_0_0.notifyOnChanges();
            }
            if (this._query_RouterLinkWithHref_0_1.dirty) {
                this._query_RouterLinkWithHref_0_1.reset([this._RouterLinkWithHref_1_3.context]);
                this._RouterLinkActive_0_3.context.linksWithHrefs = this._query_RouterLinkWithHref_0_1;
                this._query_RouterLinkWithHref_0_1.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._RouterLinkActive_0_3.context.ngAfterContentInit();
            }
        }
        this._RouterLinkWithHref_1_3.checkHost(this, this, this._el_1, throwOnChange);
    }
    destroyInternal() {
        this._RouterLinkWithHref_1_3.ngOnDestroy();
        this._RouterLinkActive_0_3.ngOnDestroy();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
    handleEvent_1(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._RouterLinkWithHref_1_3.handleEvent(eventName, $event) && result);
        return result;
    }
}
//# sourceMappingURL=authentication.component.ngfactory.js.map