/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './games.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './games.service';
import * as import9 from './games.component.css.shim';
import * as import10 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import11 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import13 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import14 from '@angular/core/src/linker/view_container';
import * as import15 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import16 from '@angular/common/src/pipes/number_pipe';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/core/src/i18n/tokens';
import * as import21 from '@angular/forms/src/directives/default_value_accessor';
import * as import22 from '@angular/forms/src/directives/control_value_accessor';
import * as import23 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import24 from '@angular/forms/src/directives/ng_control';
import * as import25 from '@angular/forms/src/directives/ng_control_status';
import * as import26 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import27 from '@angular/forms/src/directives/control_container';
import * as import28 from '@angular/common/src/directives/ng_for';
import * as import29 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import30 from '@angular/common/src/directives/ng_if';
import * as import31 from '@angular/core/src/security';
export class Wrapper_GamesComponent {
    constructor(p0) {
        this._changed = false;
        this.context = new import0.GamesComponent(p0);
    }
    ngOnDetach(view, componentView, el) {
    }
    ngOnDestroy() {
    }
    ngDoCheck(view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    }
    checkHost(view, componentView, el, throwOnChange) {
    }
    handleEvent(eventName, $event) {
        var result = true;
        return result;
    }
    subscribe(view, _eventHandler) {
        this._eventHandler = _eventHandler;
    }
}
var renderType_GamesComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
class View_GamesComponent_Host0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_GamesComponent_Host0, renderType_GamesComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'app-games', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_GamesComponent0(this.viewUtils, this, 0, this._el_0);
        this._GamesComponent_0_3 = new Wrapper_GamesComponent(this.injectorGet(import8.GamesService, this.parentIndex));
        this.compView_0.create(this._GamesComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._GamesComponent_0_3.context);
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import0.GamesComponent) && (0 === requestNodeIndex))) {
            return this._GamesComponent_0_3.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        this._GamesComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    }
    destroyInternal() {
        this.compView_0.destroy();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
export const GamesComponentNgFactory = new import7.ComponentFactory('app-games', View_GamesComponent_Host0, import0.GamesComponent);
const styles_GamesComponent = [import9.styles];
var renderType_GamesComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_GamesComponent, {});
export class View_GamesComponent0 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement) {
        super(View_GamesComponent0, renderType_GamesComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_28 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        const parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'form', import3.EMPTY_INLINE_ARRAY, null);
        this._FormGroupDirective_0_3 = new import10.Wrapper_FormGroupDirective(null, null);
        this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
        this._NgControlStatusGroup_0_5 = new import11.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
        this._text_1 = this.renderer.createText(this._el_0, '\n', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'form-group'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n      ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'label', new import3.InlineArray2(2, 'for', 'title'), null);
        this._text_5 = this.renderer.createText(this._el_4, 'Search:', null);
        this._text_6 = this.renderer.createText(this._el_2, '\n      ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_2, 'input', new import3.InlineArray16(10, 'class', 'form-control', 'formControlName', 'game', 'id', 'game', 'placeholder', 'search for a game', 'type', 'text'), null);
        this._DefaultValueAccessor_7_3 = new import12.Wrapper_DefaultValueAccessor(this.renderer, new import17.ElementRef(this._el_7));
        this._NG_VALUE_ACCESSOR_7_4 = [this._DefaultValueAccessor_7_3.context];
        this._FormControlName_7_5 = new import13.Wrapper_FormControlName(this._ControlContainer_0_4, null, null, this._NG_VALUE_ACCESSOR_7_4);
        this._NgControl_7_6 = this._FormControlName_7_5.context;
        this._NgControlStatus_7_7 = new import11.Wrapper_NgControlStatus(this._NgControl_7_6);
        this._text_8 = this.renderer.createText(this._el_2, '\n  ', null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_2, 'button', new import3.InlineArray4(4, 'class', 'btn btn-lg btn-outline-primary', 'type', 'submit'), null);
        this._text_10 = this.renderer.createText(this._el_9, 'Submit', null);
        this._text_11 = this.renderer.createText(this._el_2, '\n        ', null);
        this._text_12 = this.renderer.createText(this._el_0, '\n', null);
        this._text_13 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._anchor_14 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_14 = new import14.ViewContainer(14, null, this, this._anchor_14);
        this._TemplateRef_14_5 = new import18.TemplateRef_(this, 14, this._anchor_14);
        this._NgFor_14_6 = new import15.Wrapper_NgFor(this._vc_14.vcRef, this._TemplateRef_14_5, this.parentView.injectorGet(import19.IterableDiffers, this.parentIndex), this.ref);
        this._text_15 = this.renderer.createText(parentRenderNode, '\n', null);
        this._text_16 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray8(6, 'ngSubmit', null, 'submit', null, 'reset', null), this.eventHandler(this.handleEvent_0));
        this._FormGroupDirective_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_7, new import3.InlineArray4(4, 'input', null, 'blur', null), this.eventHandler(this.handleEvent_7));
        this._pipe_number_0 = new import16.DecimalPipe(this.parentView.injectorGet(import20.LOCALE_ID, this.parentIndex));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._text_12,
            this._text_13,
            this._anchor_14,
            this._text_15,
            this._text_16
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import21.DefaultValueAccessor) && (7 === requestNodeIndex))) {
            return this._DefaultValueAccessor_7_3.context;
        }
        if (((token === import22.NG_VALUE_ACCESSOR) && (7 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_7_4;
        }
        if (((token === import23.FormControlName) && (7 === requestNodeIndex))) {
            return this._FormControlName_7_5.context;
        }
        if (((token === import24.NgControl) && (7 === requestNodeIndex))) {
            return this._NgControl_7_6;
        }
        if (((token === import25.NgControlStatus) && (7 === requestNodeIndex))) {
            return this._NgControlStatus_7_7.context;
        }
        if (((token === import26.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._FormGroupDirective_0_3.context;
        }
        if (((token === import27.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._ControlContainer_0_4;
        }
        if (((token === import25.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 12)))) {
            return this._NgControlStatusGroup_0_5.context;
        }
        if (((token === import18.TemplateRef) && (14 === requestNodeIndex))) {
            return this._TemplateRef_14_5;
        }
        if (((token === import28.NgFor) && (14 === requestNodeIndex))) {
            return this._NgFor_14_6.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_0_0_0 = this.context.searchGameForm;
        this._FormGroupDirective_0_3.check_form(currVal_0_0_0, throwOnChange, false);
        this._FormGroupDirective_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatusGroup_0_5.ngDoCheck(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_7_3.ngDoCheck(this, this._el_7, throwOnChange);
        const currVal_7_1_0 = 'game';
        this._FormControlName_7_5.check_name(currVal_7_1_0, throwOnChange, false);
        this._FormControlName_7_5.ngDoCheck(this, this._el_7, throwOnChange);
        this._NgControlStatus_7_7.ngDoCheck(this, this._el_7, throwOnChange);
        const currVal_14_0_0 = this.context.games;
        this._NgFor_14_6.check_ngForOf(currVal_14_0_0, throwOnChange, false);
        this._NgFor_14_6.ngDoCheck(this, this._anchor_14, throwOnChange);
        this._vc_14.detectChangesInNestedViews(throwOnChange);
        this._NgControlStatusGroup_0_5.checkHost(this, this, this._el_0, throwOnChange);
        this._NgControlStatus_7_7.checkHost(this, this, this._el_7, throwOnChange);
        const currVal_28 = !this.context.searchGameForm.valid;
        if (import3.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            this.renderer.setElementProperty(this._el_9, 'disabled', currVal_28);
            this._expr_28 = currVal_28;
        }
    }
    destroyInternal() {
        this._vc_14.destroyNestedViews();
        this._FormControlName_7_5.ngOnDestroy();
        this._FormGroupDirective_0_3.ngOnDestroy();
    }
    createEmbeddedViewInternal(nodeIndex) {
        if ((nodeIndex == 14)) {
            return new View_GamesComponent1(this.viewUtils, this, 14, this._anchor_14, this._vc_14);
        }
        return null;
    }
    handleEvent_0(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._FormGroupDirective_0_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngSubmit')) {
            const pd_sub_0 = (this.context.seachGame() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    }
    handleEvent_7(eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_7_3.handleEvent(eventName, $event) && result);
        return result;
    }
}
class View_GamesComponent1 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent1, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_37 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'card card-block text-xs-center col-xs-12 col-sm-6'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'card-block'), null);
        this._text_3 = this.renderer.createText(this._el_2, '\n    ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_2, 'h4', new import3.InlineArray2(2, 'class', 'card-title'), null);
        this._text_5 = this.renderer.createText(this._el_4, '', null);
        this._text_6 = this.renderer.createText(this._el_2, '\n    ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._vc_7 = new import14.ViewContainer(7, 2, this, this._anchor_7);
        this._TemplateRef_7_5 = new import18.TemplateRef_(this, 7, this._anchor_7);
        this._NgIf_7_6 = new import29.Wrapper_NgIf(this._vc_7.vcRef, this._TemplateRef_7_5);
        this._text_8 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_9 = this.renderer.createText(this._el_0, '\n  ', null);
        this._anchor_10 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_10 = new import14.ViewContainer(10, 0, this, this._anchor_10);
        this._TemplateRef_10_5 = new import18.TemplateRef_(this, 10, this._anchor_10);
        this._NgIf_10_6 = new import29.Wrapper_NgIf(this._vc_10.vcRef, this._TemplateRef_10_5);
        this._text_11 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'card-block'), null);
        this._text_13 = this.renderer.createText(this._el_12, '\n    ', null);
        this._anchor_14 = this.renderer.createTemplateAnchor(this._el_12, null);
        this._vc_14 = new import14.ViewContainer(14, 12, this, this._anchor_14);
        this._TemplateRef_14_5 = new import18.TemplateRef_(this, 14, this._anchor_14);
        this._NgIf_14_6 = new import29.Wrapper_NgIf(this._vc_14.vcRef, this._TemplateRef_14_5);
        this._text_15 = this.renderer.createText(this._el_12, '\n    ', null);
        this._anchor_16 = this.renderer.createTemplateAnchor(this._el_12, null);
        this._vc_16 = new import14.ViewContainer(16, 12, this, this._anchor_16);
        this._TemplateRef_16_5 = new import18.TemplateRef_(this, 16, this._anchor_16);
        this._NgIf_16_6 = new import29.Wrapper_NgIf(this._vc_16.vcRef, this._TemplateRef_16_5);
        this._text_17 = this.renderer.createText(this._el_12, '\n    ', null);
        this._anchor_18 = this.renderer.createTemplateAnchor(this._el_12, null);
        this._vc_18 = new import14.ViewContainer(18, 12, this, this._anchor_18);
        this._TemplateRef_18_5 = new import18.TemplateRef_(this, 18, this._anchor_18);
        this._NgIf_18_6 = new import29.Wrapper_NgIf(this._vc_18.vcRef, this._TemplateRef_18_5);
        this._text_19 = this.renderer.createText(this._el_12, '\n    ', null);
        this._text_20 = this.renderer.createText(this._el_12, '\n  ', null);
        this._text_21 = this.renderer.createText(this._el_0, '\n', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9,
            this._anchor_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._anchor_14,
            this._text_15,
            this._anchor_16,
            this._text_17,
            this._anchor_18,
            this._text_19,
            this._text_20,
            this._text_21
        ]), null);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import18.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import30.NgIf) && (7 === requestNodeIndex))) {
            return this._NgIf_7_6.context;
        }
        if (((token === import18.TemplateRef) && (10 === requestNodeIndex))) {
            return this._TemplateRef_10_5;
        }
        if (((token === import30.NgIf) && (10 === requestNodeIndex))) {
            return this._NgIf_10_6.context;
        }
        if (((token === import18.TemplateRef) && (14 === requestNodeIndex))) {
            return this._TemplateRef_14_5;
        }
        if (((token === import30.NgIf) && (14 === requestNodeIndex))) {
            return this._NgIf_14_6.context;
        }
        if (((token === import18.TemplateRef) && (16 === requestNodeIndex))) {
            return this._TemplateRef_16_5;
        }
        if (((token === import30.NgIf) && (16 === requestNodeIndex))) {
            return this._NgIf_16_6.context;
        }
        if (((token === import18.TemplateRef) && (18 === requestNodeIndex))) {
            return this._TemplateRef_18_5;
        }
        if (((token === import30.NgIf) && (18 === requestNodeIndex))) {
            return this._NgIf_18_6.context;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_7_0_0 = this.context.$implicit.alternative_names;
        this._NgIf_7_6.check_ngIf(currVal_7_0_0, throwOnChange, false);
        this._NgIf_7_6.ngDoCheck(this, this._anchor_7, throwOnChange);
        const currVal_10_0_0 = (this.context.$implicit.cover && this.context.$implicit.cover.url);
        this._NgIf_10_6.check_ngIf(currVal_10_0_0, throwOnChange, false);
        this._NgIf_10_6.ngDoCheck(this, this._anchor_10, throwOnChange);
        const currVal_14_0_0 = (this.context.$implicit.release_dates && this.context.$implicit.release_dates[0].human);
        this._NgIf_14_6.check_ngIf(currVal_14_0_0, throwOnChange, false);
        this._NgIf_14_6.ngDoCheck(this, this._anchor_14, throwOnChange);
        const currVal_16_0_0 = this.context.$implicit.aggregated_rating;
        this._NgIf_16_6.check_ngIf(currVal_16_0_0, throwOnChange, false);
        this._NgIf_16_6.ngDoCheck(this, this._anchor_16, throwOnChange);
        const currVal_18_0_0 = this.context.$implicit.url;
        this._NgIf_18_6.check_ngIf(currVal_18_0_0, throwOnChange, false);
        this._NgIf_18_6.ngDoCheck(this, this._anchor_18, throwOnChange);
        this._vc_7.detectChangesInNestedViews(throwOnChange);
        this._vc_10.detectChangesInNestedViews(throwOnChange);
        this._vc_14.detectChangesInNestedViews(throwOnChange);
        this._vc_16.detectChangesInNestedViews(throwOnChange);
        this._vc_18.detectChangesInNestedViews(throwOnChange);
        const currVal_37 = import3.inlineInterpolate(1, '', this.context.$implicit.name, '');
        if (import3.checkBinding(throwOnChange, this._expr_37, currVal_37)) {
            this.renderer.setText(this._text_5, currVal_37);
            this._expr_37 = currVal_37;
        }
    }
    destroyInternal() {
        this._vc_7.destroyNestedViews();
        this._vc_10.destroyNestedViews();
        this._vc_14.destroyNestedViews();
        this._vc_16.destroyNestedViews();
        this._vc_18.destroyNestedViews();
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
    createEmbeddedViewInternal(nodeIndex) {
        if ((nodeIndex == 7)) {
            return new View_GamesComponent2(this.viewUtils, this, 7, this._anchor_7, this._vc_7);
        }
        if ((nodeIndex == 10)) {
            return new View_GamesComponent3(this.viewUtils, this, 10, this._anchor_10, this._vc_10);
        }
        if ((nodeIndex == 14)) {
            return new View_GamesComponent4(this.viewUtils, this, 14, this._anchor_14, this._vc_14);
        }
        if ((nodeIndex == 16)) {
            return new View_GamesComponent5(this.viewUtils, this, 16, this._anchor_16, this._vc_16);
        }
        if ((nodeIndex == 18)) {
            return new View_GamesComponent6(this.viewUtils, this, 18, this._anchor_18, this._vc_18);
        }
        return null;
    }
}
class View_GamesComponent2 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent2, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'h6', new import3.InlineArray2(2, 'class', 'card-subtitle text-muted'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_2 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.alternative_names.name, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
class View_GamesComponent3 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent3, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'img', new import3.InlineArray2(2, 'alt', 'Card image'), null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_1 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.cover.url, '');
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'src', this.viewUtils.sanitizer.sanitize(import31.SecurityContext.URL, currVal_1));
            this._expr_1 = currVal_1;
        }
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
class View_GamesComponent4 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent4, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'p', new import3.InlineArray2(2, 'class', 'card-text'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_2 = import3.inlineInterpolate(1, 'released: ', this.parentView.context.$implicit.release_dates[0].human, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
class View_GamesComponent5 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent5, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'p', new import3.InlineArray2(2, 'class', 'card-text'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._pipe_number_0_0 = import3.pureProxy2(this.parentView.parentView._pipe_number_0.transform.bind(this.parentView.parentView._pipe_number_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        const valUnwrapper = new import6.ValueUnwrapper();
        valUnwrapper.reset();
        const currVal_2 = import3.inlineInterpolate(1, 'rating: ', valUnwrapper.unwrap(import3.castByValue(this._pipe_number_0_0, this.parentView.parentView._pipe_number_0.transform)(this.parentView.context.$implicit.aggregated_rating, '1.1-2')), '');
        if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange, this._expr_2, currVal_2))) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
class View_GamesComponent6 extends import1.AppView {
    constructor(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        super(View_GamesComponent6, renderType_GamesComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
    }
    createInternal(rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'a', new import3.InlineArray2(2, 'class', 'card-link'), null);
        this._text_1 = this.renderer.createText(this._el_0, 'Link to Igdb', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_2 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.url, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'href', this.viewUtils.sanitizer.sanitize(import31.SecurityContext.URL, currVal_2));
            this._expr_2 = currVal_2;
        }
    }
    visitRootNodesInternal(cb, ctx) {
        cb(this._el_0, ctx);
    }
}
//# sourceMappingURL=games.component.ngfactory.js.map