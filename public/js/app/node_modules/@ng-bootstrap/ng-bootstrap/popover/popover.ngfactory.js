/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/popover/popover';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
export var Wrapper_NgbPopover = (function () {
    function Wrapper_NgbPopover(p0, p1, p2, p3, p4, p5, p6) {
        this._changed = false;
        this.context = new import0.NgbPopover(p0, p1, p2, p3, p4, p5, p6);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
    }
    Wrapper_NgbPopover.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbPopover.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_NgbPopover.prototype.check_ngbPopover = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.ngbPopover = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbPopover.prototype.check_popoverTitle = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.popoverTitle = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbPopover.prototype.check_placement = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.placement = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_NgbPopover.prototype.check_triggers = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.triggers = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_NgbPopover.prototype.check_container = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.container = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_NgbPopover.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_NgbPopover.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbPopover.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbPopover.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.shown.subscribe(_eventHandler.bind(view, 'shown')));
        }
        if (emit1) {
            (this.subscription1 = this.context.hidden.subscribe(_eventHandler.bind(view, 'hidden')));
        }
    };
    return Wrapper_NgbPopover;
}());
export var Wrapper_NgbPopoverWindow = (function () {
    function Wrapper_NgbPopoverWindow() {
        this._changed = false;
        this.context = new import0.NgbPopoverWindow();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    Wrapper_NgbPopoverWindow.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbPopoverWindow.prototype.ngOnDestroy = function () {
    };
    Wrapper_NgbPopoverWindow.prototype.check_placement = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.placement = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbPopoverWindow.prototype.check_title = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.title = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbPopoverWindow.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_NgbPopoverWindow.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_2 = ('popover show popover-' + this.context.placement);
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            view.renderer.setElementProperty(el, 'className', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    Wrapper_NgbPopoverWindow.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbPopoverWindow.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_NgbPopoverWindow;
}());
var renderType_NgbPopoverWindow_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NgbPopoverWindow_Host0 = (function (_super) {
    __extends(View_NgbPopoverWindow_Host0, _super);
    function View_NgbPopoverWindow_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbPopoverWindow_Host0, renderType_NgbPopoverWindow_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbPopoverWindow_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-popover-window', new import3.InlineArray2(2, 'role', 'tooltip'), rootSelector, null);
        this.compView_0 = new View_NgbPopoverWindow0(this.viewUtils, this, 0, this._el_0);
        this._NgbPopoverWindow_0_3 = new Wrapper_NgbPopoverWindow();
        this.compView_0.create(this._NgbPopoverWindow_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._NgbPopoverWindow_0_3.context);
    };
    View_NgbPopoverWindow_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbPopoverWindow) && (0 === requestNodeIndex))) {
            return this._NgbPopoverWindow_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbPopoverWindow_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._NgbPopoverWindow_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this._NgbPopoverWindow_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbPopoverWindow_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_NgbPopoverWindow_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbPopoverWindow_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_NgbPopoverWindow_Host0;
}(import2.AppView));
export var NgbPopoverWindowNgFactory = new import7.ComponentFactory('ngb-popover-window', View_NgbPopoverWindow_Host0, import0.NgbPopoverWindow);
var styles_NgbPopoverWindow = [];
var renderType_NgbPopoverWindow = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_NgbPopoverWindow, {});
export var View_NgbPopoverWindow0 = (function (_super) {
    __extends(View_NgbPopoverWindow0, _super);
    function View_NgbPopoverWindow0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbPopoverWindow0, renderType_NgbPopoverWindow, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_5 = import1.UNINITIALIZED;
    }
    View_NgbPopoverWindow0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'h3', new import3.InlineArray2(2, 'class', 'popover-title'), null);
        this._text_2 = this.renderer.createText(this._el_1, '', null);
        this._el_3 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'popover-content'), null);
        this.projectNodes(this._el_3, 0);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4
        ]), null);
        return null;
    };
    View_NgbPopoverWindow0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_5 = import3.inlineInterpolate(1, '', this.context.title, '');
        if (import3.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setText(this._text_2, currVal_5);
            this._expr_5 = currVal_5;
        }
    };
    return View_NgbPopoverWindow0;
}(import2.AppView));
//# sourceMappingURL=popover.ngfactory.js.map