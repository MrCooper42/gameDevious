/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/carousel/carousel';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@ng-bootstrap/ng-bootstrap/carousel/carousel-config';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_for';
import * as import16 from '../../../@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import17 from '@angular/common/src/directives/ng_template_outlet';
export var Wrapper_NgbCarousel = (function () {
    function Wrapper_NgbCarousel(p0) {
        this._changed = false;
        this.context = new import0.NgbCarousel(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
    }
    Wrapper_NgbCarousel.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbCarousel.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
    };
    Wrapper_NgbCarousel.prototype.check_interval = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.interval = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbCarousel.prototype.check_wrap = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.wrap = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbCarousel.prototype.check_keyboard = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.keyboard = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_NgbCarousel.prototype.check_activeId = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.activeId = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_NgbCarousel.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_NgbCarousel.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_4 = 'block';
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            view.renderer.setElementStyle(el, 'display', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4).toString()));
            this._expr_4 = currVal_4;
        }
    };
    Wrapper_NgbCarousel.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'mouseenter')) {
            var pd_sub_0 = (this.context.pause() !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'mouseleave')) {
            var pd_sub_1 = (this.context.cycle() !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'keydown.arrowLeft')) {
            var pd_sub_2 = (this.context.keyPrev() !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'keydown.arrowRight')) {
            var pd_sub_3 = (this.context.keyNext() !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    Wrapper_NgbCarousel.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_NgbCarousel;
}());
export var Wrapper_NgbSlide = (function () {
    function Wrapper_NgbSlide(p0) {
        this._changed = false;
        this.context = new import0.NgbSlide(p0);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_NgbSlide.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbSlide.prototype.ngOnDestroy = function () {
    };
    Wrapper_NgbSlide.prototype.check_id = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.id = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbSlide.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_NgbSlide.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbSlide.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbSlide.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_NgbSlide;
}());
var renderType_NgbCarousel_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_NgbCarousel_Host0 = (function (_super) {
    __extends(View_NgbCarousel_Host0, _super);
    function View_NgbCarousel_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbCarousel_Host0, renderType_NgbCarousel_Host, import8.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbCarousel_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-carousel', new import3.InlineArray4(4, 'class', 'carousel slide', 'tabIndex', '0'), rootSelector, null);
        this.compView_0 = new View_NgbCarousel0(this.viewUtils, this, 0, this._el_0);
        this._NgbCarousel_0_3 = new Wrapper_NgbCarousel(this.injectorGet(import10.NgbCarouselConfig, this.parentIndex));
        this._query_NgbSlide_0_0 = new import7.QueryList();
        this.compView_0.create(this._NgbCarousel_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray8(8, 'mouseenter', null, 'mouseleave', null, 'keydown.arrowLeft', null, 'keydown.arrowRight', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import9.ComponentRef_(0, this, this._el_0, this._NgbCarousel_0_3.context);
    };
    View_NgbCarousel_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbCarousel) && (0 === requestNodeIndex))) {
            return this._NgbCarousel_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbCarousel_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgbCarousel_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if (this._query_NgbSlide_0_0.dirty) {
                this._query_NgbSlide_0_0.reset([]);
                this._NgbCarousel_0_3.context.slides = this._query_NgbSlide_0_0;
                this._query_NgbSlide_0_0.notifyOnChanges();
            }
            this._NgbCarousel_0_3.context.ngAfterContentChecked();
        }
        this._NgbCarousel_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbCarousel_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbCarousel_0_3.ngOnDestroy();
    };
    View_NgbCarousel_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbCarousel_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NgbCarousel_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_NgbCarousel_Host0;
}(import2.AppView));
export var NgbCarouselNgFactory = new import9.ComponentFactory('ngb-carousel', View_NgbCarousel_Host0, import0.NgbCarousel);
var styles_NgbCarousel = [];
var renderType_NgbCarousel = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, styles_NgbCarousel, {});
export var View_NgbCarousel0 = (function (_super) {
    __extends(View_NgbCarousel0, _super);
    function View_NgbCarousel0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbCarousel0, renderType_NgbCarousel, import8.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbCarousel0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'ol', new import3.InlineArray2(2, 'class', 'carousel-indicators'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import11.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import13.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import12.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import14.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_6 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray4(4, 'class', 'carousel-inner', 'role', 'listbox'), null);
        this._text_7 = this.renderer.createText(this._el_6, '\n      ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_8 = new import11.ViewContainer(8, 6, this, this._anchor_8);
        this._TemplateRef_8_5 = new import13.TemplateRef_(this, 8, this._anchor_8);
        this._NgFor_8_6 = new import12.Wrapper_NgFor(this._vc_8.vcRef, this._TemplateRef_8_5, this.parentView.injectorGet(import14.IterableDiffers, this.parentIndex), this.ref);
        this._text_9 = this.renderer.createText(this._el_6, '\n    ', null);
        this._text_10 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_11 = import3.createRenderElement(this.renderer, parentRenderNode, 'a', new import3.InlineArray4(4, 'class', 'left carousel-control', 'role', 'button'), null);
        this._text_12 = this.renderer.createText(this._el_11, '\n      ', null);
        this._el_13 = import3.createRenderElement(this.renderer, this._el_11, 'span', new import3.InlineArray4(4, 'aria-hidden', 'true', 'class', 'icon-prev'), null);
        this._text_14 = this.renderer.createText(this._el_11, '\n      ', null);
        this._el_15 = import3.createRenderElement(this.renderer, this._el_11, 'span', new import3.InlineArray2(2, 'class', 'sr-only'), null);
        this._text_16 = this.renderer.createText(this._el_15, 'Previous', null);
        this._text_17 = this.renderer.createText(this._el_11, '\n    ', null);
        this._text_18 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_19 = import3.createRenderElement(this.renderer, parentRenderNode, 'a', new import3.InlineArray4(4, 'class', 'right carousel-control', 'role', 'button'), null);
        this._text_20 = this.renderer.createText(this._el_19, '\n      ', null);
        this._el_21 = import3.createRenderElement(this.renderer, this._el_19, 'span', new import3.InlineArray4(4, 'aria-hidden', 'true', 'class', 'icon-next'), null);
        this._text_22 = this.renderer.createText(this._el_19, '\n      ', null);
        this._el_23 = import3.createRenderElement(this.renderer, this._el_19, 'span', new import3.InlineArray2(2, 'class', 'sr-only'), null);
        this._text_24 = this.renderer.createText(this._el_23, 'Next', null);
        this._text_25 = this.renderer.createText(this._el_19, '\n    ', null);
        this._text_26 = this.renderer.createText(parentRenderNode, '\n    ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_11, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_11));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_19, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_19));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._anchor_8,
            this._text_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._el_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._text_17,
            this._text_18,
            this._el_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._text_25,
            this._text_26
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_NgbCarousel0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import15.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        if (((token === import13.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import15.NgFor) && (8 === requestNodeIndex))) {
            return this._NgFor_8_6.context;
        }
        return notFoundResult;
    };
    View_NgbCarousel0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context.slides;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_8_0_0 = this.context.slides;
        this._NgFor_8_6.check_ngForOf(currVal_8_0_0, throwOnChange, false);
        this._NgFor_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbCarousel0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._vc_8.destroyNestedViews();
    };
    View_NgbCarousel0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_NgbCarousel1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 8)) {
            return new View_NgbCarousel2(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        return null;
    };
    View_NgbCarousel0.prototype.handleEvent_11 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.cycleToPrev() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_NgbCarousel0.prototype.handleEvent_19 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.cycleToNext() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbCarousel0;
}(import2.AppView));
var View_NgbCarousel1 = (function (_super) {
    __extends(View_NgbCarousel1, _super);
    function View_NgbCarousel1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbCarousel1, renderType_NgbCarousel, import8.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_NgbCarousel1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'li', import3.EMPTY_INLINE_ARRAY, null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_NgbCarousel1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.$implicit.id;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = (this.context.$implicit.id === this.parentView.context.activeId);
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_0, 'active', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_NgbCarousel1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbCarousel1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.cycleToSelected(this.context.$implicit.id) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbCarousel1;
}(import2.AppView));
var View_NgbCarousel2 = (function (_super) {
    __extends(View_NgbCarousel2, _super);
    function View_NgbCarousel2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbCarousel2, renderType_NgbCarousel, import8.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_7 = import1.UNINITIALIZED;
    }
    View_NgbCarousel2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'carousel-item'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import11.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import13.TemplateRef_(this, 2, this._anchor_2);
        this._NgTemplateOutlet_2_6 = new import16.Wrapper_NgTemplateOutlet(this._vc_2.vcRef);
        this._text_3 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), null);
        return null;
    };
    View_NgbCarousel2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import17.NgTemplateOutlet) && (2 === requestNodeIndex))) {
            return this._NgTemplateOutlet_2_6.context;
        }
        return notFoundResult;
    };
    View_NgbCarousel2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.context.$implicit.tplRef;
        this._NgTemplateOutlet_2_6.check_ngTemplateOutlet(currVal_2_0_0, throwOnChange, false);
        this._NgTemplateOutlet_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_7 = (this.context.$implicit.id === this.parentView.context.activeId);
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_0, 'active', currVal_7);
            this._expr_7 = currVal_7;
        }
    };
    View_NgbCarousel2.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_NgbCarousel2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbCarousel2.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_NgbCarousel3(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_NgbCarousel2;
}(import2.AppView));
var View_NgbCarousel3 = (function (_super) {
    __extends(View_NgbCarousel3, _super);
    function View_NgbCarousel3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbCarousel3, renderType_NgbCarousel, import8.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbCarousel3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : []), null);
        return null;
    };
    View_NgbCarousel3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbCarousel3;
}(import2.AppView));
//# sourceMappingURL=carousel.ngfactory.js.map