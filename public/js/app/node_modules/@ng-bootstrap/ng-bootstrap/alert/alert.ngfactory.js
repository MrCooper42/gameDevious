/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/alert/alert';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@ng-bootstrap/ng-bootstrap/alert/alert-config';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
export var Wrapper_NgbAlert = (function () {
    function Wrapper_NgbAlert(p0) {
        this._changed = false;
        this.context = new import0.NgbAlert(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_NgbAlert.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbAlert.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_NgbAlert.prototype.check_dismissible = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.dismissible = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbAlert.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.type = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbAlert.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_NgbAlert.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbAlert.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbAlert.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.close.subscribe(_eventHandler.bind(view, 'close')));
        }
    };
    return Wrapper_NgbAlert;
}());
var renderType_NgbAlert_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NgbAlert_Host0 = (function (_super) {
    __extends(View_NgbAlert_Host0, _super);
    function View_NgbAlert_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbAlert_Host0, renderType_NgbAlert_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbAlert_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-alert', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_NgbAlert0(this.viewUtils, this, 0, this._el_0);
        this._NgbAlert_0_3 = new Wrapper_NgbAlert(this.injectorGet(import8.NgbAlertConfig, this.parentIndex));
        this.compView_0.create(this._NgbAlert_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._NgbAlert_0_3.context);
    };
    View_NgbAlert_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbAlert) && (0 === requestNodeIndex))) {
            return this._NgbAlert_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbAlert_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._NgbAlert_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbAlert_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbAlert_0_3.ngOnDestroy();
    };
    View_NgbAlert_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbAlert_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_NgbAlert_Host0;
}(import2.AppView));
export var NgbAlertNgFactory = new import7.ComponentFactory('ngb-alert', View_NgbAlert_Host0, import0.NgbAlert);
var styles_NgbAlert = [];
var renderType_NgbAlert = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_NgbAlert, {});
export var View_NgbAlert0 = (function (_super) {
    __extends(View_NgbAlert0, _super);
    function View_NgbAlert0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbAlert0, renderType_NgbAlert, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_10 = import1.UNINITIALIZED;
    }
    View_NgbAlert0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'role', 'alert'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import9.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import11.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import10.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(this._el_1, '\n      ', null);
        this.projectNodes(this._el_1, 0);
        this._text_5 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_6 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5,
            this._text_6
        ]), null);
        return null;
    };
    View_NgbAlert0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import12.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        return notFoundResult;
    };
    View_NgbAlert0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context.dismissible;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        var currVal_10 = ('alert alert-' + this.context.type);
        if (import3.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementProperty(this._el_1, 'className', currVal_10);
            this._expr_10 = currVal_10;
        }
    };
    View_NgbAlert0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
    };
    View_NgbAlert0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_NgbAlert1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    return View_NgbAlert0;
}(import2.AppView));
var View_NgbAlert1 = (function (_super) {
    __extends(View_NgbAlert1, _super);
    function View_NgbAlert1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbAlert1, renderType_NgbAlert, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbAlert1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'button', new import3.InlineArray8(6, 'aria-label', 'Close', 'class', 'close', 'type', 'button'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'span', new import3.InlineArray2(2, 'aria-hidden', 'true'), null);
        this._text_3 = this.renderer.createText(this._el_2, 'Ã—', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n      ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4
        ]), [disposable_0]);
        return null;
    };
    View_NgbAlert1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbAlert1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.closeHandler() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbAlert1;
}(import2.AppView));
//# sourceMappingURL=alert.ngfactory.js.map