/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/common/src/directives/ng_if';
import * as import15 from '@angular/common/src/directives/ng_for';
import * as import16 from '../../../@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import17 from '@angular/common/src/directives/ng_template_outlet';
export var Wrapper_NgbDatepickerMonthView = (function () {
    function Wrapper_NgbDatepickerMonthView(p0) {
        this._changed = false;
        this.context = new import0.NgbDatepickerMonthView(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
    }
    Wrapper_NgbDatepickerMonthView.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbDatepickerMonthView.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_dayTemplate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.dayTemplate = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_month = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.month = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_outsideDays = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.outsideDays = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_selectedDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.selectedDate = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_showWeekdays = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.showWeekdays = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.check_showWeekNumbers = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.showWeekNumbers = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_NgbDatepickerMonthView.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_NgbDatepickerMonthView.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbDatepickerMonthView.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbDatepickerMonthView.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.select.subscribe(_eventHandler.bind(view, 'select')));
        }
    };
    return Wrapper_NgbDatepickerMonthView;
}());
var renderType_NgbDatepickerMonthView_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NgbDatepickerMonthView_Host0 = (function (_super) {
    __extends(View_NgbDatepickerMonthView_Host0, _super);
    function View_NgbDatepickerMonthView_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepickerMonthView_Host0, renderType_NgbDatepickerMonthView_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbDatepickerMonthView_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-datepicker-month-view', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_NgbDatepickerMonthView0(this.viewUtils, this, 0, this._el_0);
        this._NgbDatepickerMonthView_0_3 = new Wrapper_NgbDatepickerMonthView(this.injectorGet(import8.NgbDatepickerI18n, this.parentIndex));
        this.compView_0.create(this._NgbDatepickerMonthView_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._NgbDatepickerMonthView_0_3.context);
    };
    View_NgbDatepickerMonthView_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbDatepickerMonthView) && (0 === requestNodeIndex))) {
            return this._NgbDatepickerMonthView_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerMonthView_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgbDatepickerMonthView_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbDatepickerMonthView_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbDatepickerMonthView_0_3.ngOnDestroy();
    };
    View_NgbDatepickerMonthView_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerMonthView_Host0;
}(import2.AppView));
export var NgbDatepickerMonthViewNgFactory = new import7.ComponentFactory('ngb-datepicker-month-view', View_NgbDatepickerMonthView_Host0, import0.NgbDatepickerMonthView);
var styles_NgbDatepickerMonthView = ['.weekday[_ngcontent-%COMP%] {\n    }\n    .weeknumber[_ngcontent-%COMP%] {\n    }\n    .day[_ngcontent-%COMP%] {\n      padding: 0;\n      height: 100%;\n      cursor: pointer;\n    }\n    .day.disabled[_ngcontent-%COMP%], .day.hidden[_ngcontent-%COMP%], .day.collapsed[_ngcontent-%COMP%] {\n      cursor: default;\n    }\n    [_nghost-%COMP%] .day.collapsed > * {\n      display: none;\n    }\n    [_nghost-%COMP%] .day.hidden > * {\n      visibility: hidden;\n    }'];
var renderType_NgbDatepickerMonthView = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_NgbDatepickerMonthView, {});
export var View_NgbDatepickerMonthView0 = (function (_super) {
    __extends(View_NgbDatepickerMonthView0, _super);
    function View_NgbDatepickerMonthView0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepickerMonthView0, renderType_NgbDatepickerMonthView, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbDatepickerMonthView0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'table', import3.EMPTY_INLINE_ARRAY, null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_1, 'tbody', import3.EMPTY_INLINE_ARRAY, null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_3, null);
        this._vc_4 = new import9.ViewContainer(4, 3, this, this._anchor_4);
        this._TemplateRef_4_5 = new import12.TemplateRef_(this, 4, this._anchor_4);
        this._NgIf_4_6 = new import10.Wrapper_NgIf(this._vc_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_3, '\n      ', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_3, null);
        this._vc_6 = new import9.ViewContainer(6, 3, this, this._anchor_6);
        this._TemplateRef_6_5 = new import12.TemplateRef_(this, 6, this._anchor_6);
        this._NgFor_6_6 = new import11.Wrapper_NgFor(this._vc_6.vcRef, this._TemplateRef_6_5, this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.ref);
        this._text_7 = this.renderer.createText(this._el_3, '\n    ', null);
        this._text_8 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._anchor_4,
            this._text_5,
            this._anchor_6,
            this._text_7,
            this._text_8
        ]), null);
        return null;
    };
    View_NgbDatepickerMonthView0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import14.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import12.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import15.NgFor) && (6 === requestNodeIndex))) {
            return this._NgFor_6_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerMonthView0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_4_0_0 = this.context.showWeekdays;
        this._NgIf_4_6.check_ngIf(currVal_4_0_0, throwOnChange, false);
        this._NgIf_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        var currVal_6_0_0 = this.context.month.weeks;
        this._NgFor_6_6.check_ngForOf(currVal_6_0_0, throwOnChange, false);
        this._NgFor_6_6.ngDoCheck(this, this._anchor_6, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this._vc_6.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbDatepickerMonthView0.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
        this._vc_6.destroyNestedViews();
    };
    View_NgbDatepickerMonthView0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 4)) {
            return new View_NgbDatepickerMonthView1(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        if ((nodeIndex == 6)) {
            return new View_NgbDatepickerMonthView4(this.viewUtils, this, 6, this._anchor_6, this._vc_6);
        }
        return null;
    };
    return View_NgbDatepickerMonthView0;
}(import2.AppView));
var View_NgbDatepickerMonthView1 = (function (_super) {
    __extends(View_NgbDatepickerMonthView1, _super);
    function View_NgbDatepickerMonthView1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView1, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepickerMonthView1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'tr', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import9.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import12.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import10.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_4 = new import9.ViewContainer(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import12.TemplateRef_(this, 4, this._anchor_4);
        this._NgFor_4_6 = new import11.Wrapper_NgFor(this._vc_4.vcRef, this._TemplateRef_4_5, this.parentView.parentView.injectorGet(import13.IterableDiffers, this.parentView.parentIndex), this.parentView.ref);
        this._text_5 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._anchor_4,
            this._text_5
        ]), null);
        return null;
    };
    View_NgbDatepickerMonthView1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import14.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        if (((token === import12.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import15.NgFor) && (4 === requestNodeIndex))) {
            return this._NgFor_4_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerMonthView1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.parentView.context.showWeekNumbers;
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        var currVal_4_0_0 = this.parentView.context.month.weekdays;
        this._NgFor_4_6.check_ngForOf(currVal_4_0_0, throwOnChange, false);
        this._NgFor_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbDatepickerMonthView1.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
        this._vc_4.destroyNestedViews();
    };
    View_NgbDatepickerMonthView1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepickerMonthView1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_NgbDatepickerMonthView2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        if ((nodeIndex == 4)) {
            return new View_NgbDatepickerMonthView3(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        return null;
    };
    return View_NgbDatepickerMonthView1;
}(import2.AppView));
var View_NgbDatepickerMonthView2 = (function (_super) {
    __extends(View_NgbDatepickerMonthView2, _super);
    function View_NgbDatepickerMonthView2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView2, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepickerMonthView2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', import3.EMPTY_INLINE_ARRAY, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_NgbDatepickerMonthView2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerMonthView2;
}(import2.AppView));
var View_NgbDatepickerMonthView3 = (function (_super) {
    __extends(View_NgbDatepickerMonthView3, _super);
    function View_NgbDatepickerMonthView3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView3, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_NgbDatepickerMonthView3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', new import3.InlineArray2(2, 'class', 'weekday text-xs-center font-weight-bold'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_NgbDatepickerMonthView3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', this.parentView.parentView.context.i18n.getWeekdayName(this.context.$implicit), '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_NgbDatepickerMonthView3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerMonthView3;
}(import2.AppView));
var View_NgbDatepickerMonthView4 = (function (_super) {
    __extends(View_NgbDatepickerMonthView4, _super);
    function View_NgbDatepickerMonthView4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView4, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepickerMonthView4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'tr', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import9.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import12.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import10.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_4 = new import9.ViewContainer(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import12.TemplateRef_(this, 4, this._anchor_4);
        this._NgFor_4_6 = new import11.Wrapper_NgFor(this._vc_4.vcRef, this._TemplateRef_4_5, this.parentView.parentView.injectorGet(import13.IterableDiffers, this.parentView.parentIndex), this.parentView.ref);
        this._text_5 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._anchor_4,
            this._text_5
        ]), null);
        return null;
    };
    View_NgbDatepickerMonthView4.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import14.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        if (((token === import12.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import15.NgFor) && (4 === requestNodeIndex))) {
            return this._NgFor_4_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerMonthView4.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.parentView.context.showWeekNumbers;
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        var currVal_4_0_0 = this.context.$implicit.days;
        this._NgFor_4_6.check_ngForOf(currVal_4_0_0, throwOnChange, false);
        this._NgFor_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbDatepickerMonthView4.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
        this._vc_4.destroyNestedViews();
    };
    View_NgbDatepickerMonthView4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepickerMonthView4.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_NgbDatepickerMonthView5(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        if ((nodeIndex == 4)) {
            return new View_NgbDatepickerMonthView6(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        return null;
    };
    return View_NgbDatepickerMonthView4;
}(import2.AppView));
var View_NgbDatepickerMonthView5 = (function (_super) {
    __extends(View_NgbDatepickerMonthView5, _super);
    function View_NgbDatepickerMonthView5(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView5, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_NgbDatepickerMonthView5.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', new import3.InlineArray2(2, 'class', 'weeknumber small text-xs-center'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_NgbDatepickerMonthView5.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.number, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_NgbDatepickerMonthView5.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerMonthView5;
}(import2.AppView));
var View_NgbDatepickerMonthView6 = (function (_super) {
    __extends(View_NgbDatepickerMonthView6, _super);
    function View_NgbDatepickerMonthView6(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView6, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._map_10 = import3.pureProxy3(function (p0, p1, p2) {
            return {
                year: p0,
                month: p1,
                day: p2
            };
        });
        this._map_11 = import3.pureProxy4(function (p0, p1, p2, p3) {
            return {
                date: p0,
                currentMonth: p1,
                disabled: p2,
                selected: p3
            };
        });
    }
    View_NgbDatepickerMonthView6.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', new import3.InlineArray2(2, 'class', 'day'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import9.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import12.TemplateRef_(this, 2, this._anchor_2);
        this._NgTemplateOutlet_2_6 = new import16.Wrapper_NgTemplateOutlet(this._vc_2.vcRef);
        this._text_3 = this.renderer.createText(this._el_0, '\n        ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), [disposable_0]);
        return null;
    };
    View_NgbDatepickerMonthView6.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import17.NgTemplateOutlet) && (2 === requestNodeIndex))) {
            return this._NgTemplateOutlet_2_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerMonthView6.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this._map_11(this._map_10(this.context.$implicit.date.year, this.context.$implicit.date.month, this.context.$implicit.date.day), this.parentView.parentView.context.month.number, this.parentView.parentView.context.isDisabled(this.context.$implicit), this.parentView.parentView.context.isSelected(this.context.$implicit.date));
        this._NgTemplateOutlet_2_6.check_ngOutletContext(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.parentView.context.dayTemplate;
        this._NgTemplateOutlet_2_6.check_ngTemplateOutlet(currVal_2_0_1, throwOnChange, false);
        this._NgTemplateOutlet_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_7 = this.parentView.parentView.context.isDisabled(this.context.$implicit);
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_0, 'disabled', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this.parentView.parentView.context.isCollapsed(this.context.$implicit);
        if (import3.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_0, 'collapsed', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.parentView.parentView.context.isHidden(this.context.$implicit);
        if (import3.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_0, 'hidden', currVal_9);
            this._expr_9 = currVal_9;
        }
    };
    View_NgbDatepickerMonthView6.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_NgbDatepickerMonthView6.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepickerMonthView6.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_NgbDatepickerMonthView7(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    View_NgbDatepickerMonthView6.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.parentView.context.doSelect(this.context.$implicit) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbDatepickerMonthView6;
}(import2.AppView));
var View_NgbDatepickerMonthView7 = (function (_super) {
    __extends(View_NgbDatepickerMonthView7, _super);
    function View_NgbDatepickerMonthView7(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerMonthView7, renderType_NgbDatepickerMonthView, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepickerMonthView7.prototype.createInternal = function (rootSelector) {
        this._text_0 = this.renderer.createText(null, '\n            ', null);
        this.init(this._text_0, (this.renderer.directRenderer ? null : [this._text_0]), null);
        return null;
    };
    View_NgbDatepickerMonthView7.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._text_0, ctx);
    };
    return View_NgbDatepickerMonthView7;
}(import2.AppView));
//# sourceMappingURL=datepicker-month-view.ngfactory.js.map