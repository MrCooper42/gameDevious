/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';
import * as import9 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/common/src/directives/ng_for';
import * as import15 from '../../../@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import16 from '../../../@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import19 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
export var Wrapper_NgbDatepickerNavigationSelect = (function () {
    function Wrapper_NgbDatepickerNavigationSelect(p0, p1) {
        this._changed = false;
        this._changes = {};
        this.context = new import0.NgbDatepickerNavigationSelect(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
    }
    Wrapper_NgbDatepickerNavigationSelect.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.check_date = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.date = currValue;
            this._changes['date'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._changes['disabled'] = new import1.SimpleChange(this._expr_1, currValue);
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.check_maxDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.maxDate = currValue;
            this._changes['maxDate'] = new import1.SimpleChange(this._expr_2, currValue);
            this._expr_2 = currValue;
        }
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.check_minDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.minDate = currValue;
            this._changes['minDate'] = new import1.SimpleChange(this._expr_3, currValue);
            this._expr_3 = currValue;
        }
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
        }
        return changed;
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbDatepickerNavigationSelect.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.select.subscribe(_eventHandler.bind(view, 'select')));
        }
    };
    return Wrapper_NgbDatepickerNavigationSelect;
}());
var renderType_NgbDatepickerNavigationSelect_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NgbDatepickerNavigationSelect_Host0 = (function (_super) {
    __extends(View_NgbDatepickerNavigationSelect_Host0, _super);
    function View_NgbDatepickerNavigationSelect_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepickerNavigationSelect_Host0, renderType_NgbDatepickerNavigationSelect_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbDatepickerNavigationSelect_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-datepicker-navigation-select', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_NgbDatepickerNavigationSelect0(this.viewUtils, this, 0, this._el_0);
        this._NgbDatepickerNavigationSelect_0_3 = new Wrapper_NgbDatepickerNavigationSelect(this.injectorGet(import8.NgbDatepickerI18n, this.parentIndex), this.injectorGet(import9.NgbCalendar, this.parentIndex));
        this.compView_0.create(this._NgbDatepickerNavigationSelect_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._NgbDatepickerNavigationSelect_0_3.context);
    };
    View_NgbDatepickerNavigationSelect_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbDatepickerNavigationSelect) && (0 === requestNodeIndex))) {
            return this._NgbDatepickerNavigationSelect_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerNavigationSelect_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgbDatepickerNavigationSelect_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbDatepickerNavigationSelect_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbDatepickerNavigationSelect_0_3.ngOnDestroy();
    };
    View_NgbDatepickerNavigationSelect_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerNavigationSelect_Host0;
}(import2.AppView));
export var NgbDatepickerNavigationSelectNgFactory = new import7.ComponentFactory('ngb-datepicker-navigation-select', View_NgbDatepickerNavigationSelect_Host0, import0.NgbDatepickerNavigationSelect);
var styles_NgbDatepickerNavigationSelect = ['select[_ngcontent-%COMP%] {\n      \n      padding: 0.25rem 0.5rem;\n      font-size: 0.875rem;      \n      line-height: 1.25;\n      \n      height: inherit;\n      width: 50%;\n    }'];
var renderType_NgbDatepickerNavigationSelect = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_NgbDatepickerNavigationSelect, {});
export var View_NgbDatepickerNavigationSelect0 = (function (_super) {
    __extends(View_NgbDatepickerNavigationSelect0, _super);
    function View_NgbDatepickerNavigationSelect0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepickerNavigationSelect0, renderType_NgbDatepickerNavigationSelect, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
        this._expr_19 = import1.UNINITIALIZED;
    }
    View_NgbDatepickerNavigationSelect0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'select', new import3.InlineArray2(2, 'class', 'custom-select d-inline-block'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import10.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import12.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import11.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n    ', null);
        this._el_5 = import3.createRenderElement(this.renderer, parentRenderNode, 'select', new import3.InlineArray2(2, 'class', 'custom-select d-inline-block'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n      ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(this._el_5, null);
        this._vc_7 = new import10.ViewContainer(7, 5, this, this._anchor_7);
        this._TemplateRef_7_5 = new import12.TemplateRef_(this, 7, this._anchor_7);
        this._NgFor_7_6 = new import11.Wrapper_NgFor(this._vc_7.vcRef, this._TemplateRef_7_5, this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.ref);
        this._text_8 = this.renderer.createText(this._el_5, '\n    ', null);
        this._text_9 = this.renderer.createText(parentRenderNode, ' \n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'change', null), this.eventHandler(this.handleEvent_1));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_5, new import3.InlineArray2(2, 'change', null), this.eventHandler(this.handleEvent_5));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_NgbDatepickerNavigationSelect0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import14.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        if (((token === import12.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import14.NgFor) && (7 === requestNodeIndex))) {
            return this._NgFor_7_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerNavigationSelect0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context.months;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_7_0_0 = this.context.years;
        this._NgFor_7_6.check_ngForOf(currVal_7_0_0, throwOnChange, false);
        this._NgFor_7_6.ngDoCheck(this, this._anchor_7, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_7.detectChangesInNestedViews(throwOnChange);
        var currVal_16 = this.context.disabled;
        if (import3.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementProperty(this._el_1, 'disabled', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this.context.date.month;
        if (import3.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementProperty(this._el_1, 'value', currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this.context.disabled;
        if (import3.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementProperty(this._el_5, 'disabled', currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = this.context.date.year;
        if (import3.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementProperty(this._el_5, 'value', currVal_19);
            this._expr_19 = currVal_19;
        }
    };
    View_NgbDatepickerNavigationSelect0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._vc_7.destroyNestedViews();
    };
    View_NgbDatepickerNavigationSelect0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_NgbDatepickerNavigationSelect1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 7)) {
            return new View_NgbDatepickerNavigationSelect2(this.viewUtils, this, 7, this._anchor_7, this._vc_7);
        }
        return null;
    };
    View_NgbDatepickerNavigationSelect0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'change')) {
            var pd_sub_0 = (this.context.changeMonth($event.target.value) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_NgbDatepickerNavigationSelect0.prototype.handleEvent_5 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'change')) {
            var pd_sub_0 = (this.context.changeYear($event.target.value) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbDatepickerNavigationSelect0;
}(import2.AppView));
var View_NgbDatepickerNavigationSelect1 = (function (_super) {
    __extends(View_NgbDatepickerNavigationSelect1, _super);
    function View_NgbDatepickerNavigationSelect1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerNavigationSelect1, renderType_NgbDatepickerNavigationSelect, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_4 = import1.UNINITIALIZED;
    }
    View_NgbDatepickerNavigationSelect1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'option', import3.EMPTY_INLINE_ARRAY, null);
        this._NgSelectOption_0_3 = new import15.Wrapper_NgSelectOption(new import17.ElementRef(this._el_0), this.renderer, null);
        this._NgSelectMultipleOption_0_4 = new import16.Wrapper_NgSelectMultipleOption(new import17.ElementRef(this._el_0), this.renderer, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_NgbDatepickerNavigationSelect1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectOption_0_3.context;
        }
        if (((token === import19.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectMultipleOption_0_4.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerNavigationSelect1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._NgSelectOption_0_3.check_value(currVal_0_0_0, throwOnChange, false);
        this._NgSelectOption_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.context.$implicit;
        this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0, throwOnChange, false);
        this._NgSelectMultipleOption_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_4 = import3.inlineInterpolate(1, '', this.parentView.context.i18n.getMonthName(this.context.$implicit), '');
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_1, currVal_4);
            this._expr_4 = currVal_4;
        }
    };
    View_NgbDatepickerNavigationSelect1.prototype.destroyInternal = function () {
        this._NgSelectOption_0_3.ngOnDestroy();
        this._NgSelectMultipleOption_0_4.ngOnDestroy();
    };
    View_NgbDatepickerNavigationSelect1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerNavigationSelect1;
}(import2.AppView));
var View_NgbDatepickerNavigationSelect2 = (function (_super) {
    __extends(View_NgbDatepickerNavigationSelect2, _super);
    function View_NgbDatepickerNavigationSelect2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepickerNavigationSelect2, renderType_NgbDatepickerNavigationSelect, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_4 = import1.UNINITIALIZED;
    }
    View_NgbDatepickerNavigationSelect2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'option', import3.EMPTY_INLINE_ARRAY, null);
        this._NgSelectOption_0_3 = new import15.Wrapper_NgSelectOption(new import17.ElementRef(this._el_0), this.renderer, null);
        this._NgSelectMultipleOption_0_4 = new import16.Wrapper_NgSelectMultipleOption(new import17.ElementRef(this._el_0), this.renderer, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_NgbDatepickerNavigationSelect2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectOption_0_3.context;
        }
        if (((token === import19.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgSelectMultipleOption_0_4.context;
        }
        return notFoundResult;
    };
    View_NgbDatepickerNavigationSelect2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._NgSelectOption_0_3.check_value(currVal_0_0_0, throwOnChange, false);
        this._NgSelectOption_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.context.$implicit;
        this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0, throwOnChange, false);
        this._NgSelectMultipleOption_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_4 = import3.inlineInterpolate(1, '', this.context.$implicit, '');
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_1, currVal_4);
            this._expr_4 = currVal_4;
        }
    };
    View_NgbDatepickerNavigationSelect2.prototype.destroyInternal = function () {
        this._NgSelectOption_0_3.ngOnDestroy();
        this._NgSelectMultipleOption_0_4.ngOnDestroy();
    };
    View_NgbDatepickerNavigationSelect2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepickerNavigationSelect2;
}(import2.AppView));
//# sourceMappingURL=datepicker-navigation-select.ngfactory.js.map