/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service';
import * as import9 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';
import * as import10 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';
import * as import11 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config';
import * as import12 from '@angular/forms/src/directives/control_value_accessor';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from '@angular/common/src/directives/ng_for';
import * as import20 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view';
import * as import21 from './datepicker-day-view.ngfactory';
import * as import22 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation';
import * as import23 from './datepicker-navigation.ngfactory';
import * as import24 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view';
import * as import25 from './datepicker-month-view.ngfactory';
export var Wrapper_NgbDatepicker = (function () {
    function Wrapper_NgbDatepicker(p0, p1, p2, p3) {
        this._changed = false;
        this._changes = {};
        this.context = new import0.NgbDatepicker(p0, p1, p2, p3);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
    }
    Wrapper_NgbDatepicker.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgbDatepicker.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_NgbDatepicker.prototype.check_dayTemplate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.dayTemplate = currValue;
            this._changes['dayTemplate'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_displayMonths = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.displayMonths = currValue;
            this._changes['displayMonths'] = new import1.SimpleChange(this._expr_1, currValue);
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_firstDayOfWeek = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.firstDayOfWeek = currValue;
            this._changes['firstDayOfWeek'] = new import1.SimpleChange(this._expr_2, currValue);
            this._expr_2 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_markDisabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.markDisabled = currValue;
            this._changes['markDisabled'] = new import1.SimpleChange(this._expr_3, currValue);
            this._expr_3 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_minDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.minDate = currValue;
            this._changes['minDate'] = new import1.SimpleChange(this._expr_4, currValue);
            this._expr_4 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_maxDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.maxDate = currValue;
            this._changes['maxDate'] = new import1.SimpleChange(this._expr_5, currValue);
            this._expr_5 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_navigation = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.navigation = currValue;
            this._changes['navigation'] = new import1.SimpleChange(this._expr_6, currValue);
            this._expr_6 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_outsideDays = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.outsideDays = currValue;
            this._changes['outsideDays'] = new import1.SimpleChange(this._expr_7, currValue);
            this._expr_7 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_showWeekdays = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.showWeekdays = currValue;
            this._changes['showWeekdays'] = new import1.SimpleChange(this._expr_8, currValue);
            this._expr_8 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_showWeekNumbers = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.showWeekNumbers = currValue;
            this._changes['showWeekNumbers'] = new import1.SimpleChange(this._expr_9, currValue);
            this._expr_9 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.check_startDate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.startDate = currValue;
            this._changes['startDate'] = new import1.SimpleChange(this._expr_10, currValue);
            this._expr_10 = currValue;
        }
    };
    Wrapper_NgbDatepicker.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_NgbDatepicker.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgbDatepicker.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgbDatepicker.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.navigate.subscribe(_eventHandler.bind(view, 'navigate')));
        }
    };
    return Wrapper_NgbDatepicker;
}());
var renderType_NgbDatepicker_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NgbDatepicker_Host0 = (function (_super) {
    __extends(View_NgbDatepicker_Host0, _super);
    function View_NgbDatepicker_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepicker_Host0, renderType_NgbDatepicker_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(View_NgbDatepicker_Host0.prototype, "_NG_VALUE_ACCESSOR_0_4", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_4 = [this._NgbDatepicker_0_3.context]);
            }
            return this.__NG_VALUE_ACCESSOR_0_4;
        },
        enumerable: true,
        configurable: true
    });
    View_NgbDatepicker_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngb-datepicker', new import3.InlineArray2(2, 'class', 'd-inline-block'), rootSelector, null);
        this.compView_0 = new View_NgbDatepicker0(this.viewUtils, this, 0, this._el_0);
        this._NgbDatepicker_0_3 = new Wrapper_NgbDatepicker(this.injectorGet(import8.NgbDatepickerService, this.parentIndex), this.injectorGet(import9.NgbCalendar, this.parentIndex), this.injectorGet(import10.NgbDatepickerI18n, this.parentIndex), this.injectorGet(import11.NgbDatepickerConfig, this.parentIndex));
        this.compView_0.create(this._NgbDatepicker_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._NgbDatepicker_0_3.context);
    };
    View_NgbDatepicker_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NgbDatepicker) && (0 === requestNodeIndex))) {
            return this._NgbDatepicker_0_3.context;
        }
        if (((token === import12.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_4;
        }
        return notFoundResult;
    };
    View_NgbDatepicker_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NgbDatepicker_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbDatepicker_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbDatepicker_0_3.ngOnDestroy();
    };
    View_NgbDatepicker_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepicker_Host0;
}(import2.AppView));
export var NgbDatepickerNgFactory = new import7.ComponentFactory('ngb-datepicker', View_NgbDatepicker_Host0, import0.NgbDatepicker);
var styles_NgbDatepicker = ['.month[_ngcontent-%COMP%]:first-child {\n      padding-left: 0 !important;\n    }'];
var renderType_NgbDatepicker = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_NgbDatepicker, {});
export var View_NgbDatepicker0 = (function (_super) {
    __extends(View_NgbDatepicker0, _super);
    function View_NgbDatepicker0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NgbDatepicker0, renderType_NgbDatepicker, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_NgbDatepicker0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import13.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_4 = new import16.TemplateRef_(this, 1, this._anchor_1);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n\n    ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_3 = new import13.ViewContainer(3, null, this, this._anchor_3);
        this._TemplateRef_3_5 = new import16.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import14.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n\n    ', null);
        this._el_5 = import3.createRenderElement(this.renderer, parentRenderNode, 'table', import3.EMPTY_INLINE_ARRAY, null);
        this._text_6 = this.renderer.createText(this._el_5, '\n      ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_5, 'tbody', import3.EMPTY_INLINE_ARRAY, null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_7, null);
        this._vc_8 = new import13.ViewContainer(8, 7, this, this._anchor_8);
        this._TemplateRef_8_5 = new import16.TemplateRef_(this, 8, this._anchor_8);
        this._NgIf_8_6 = new import14.Wrapper_NgIf(this._vc_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_7, '\n      ', null);
        this._el_10 = import3.createRenderElement(this.renderer, this._el_7, 'tr', import3.EMPTY_INLINE_ARRAY, null);
        this._text_11 = this.renderer.createText(this._el_10, '\n        ', null);
        this._anchor_12 = this.renderer.createTemplateAnchor(this._el_10, null);
        this._vc_12 = new import13.ViewContainer(12, 10, this, this._anchor_12);
        this._TemplateRef_12_5 = new import16.TemplateRef_(this, 12, this._anchor_12);
        this._NgFor_12_6 = new import15.Wrapper_NgFor(this._vc_12.vcRef, this._TemplateRef_12_5, this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.ref);
        this._text_13 = this.renderer.createText(this._el_10, '\n      ', null);
        this._text_14 = this.renderer.createText(this._el_7, '\n    ', null);
        this._text_15 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._anchor_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._anchor_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._anchor_12,
            this._text_13,
            this._text_14,
            this._text_15
        ]), null);
        return null;
    };
    View_NgbDatepicker0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_4;
        }
        if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import18.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        if (((token === import16.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import18.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6.context;
        }
        if (((token === import16.TemplateRef) && (12 === requestNodeIndex))) {
            return this._TemplateRef_12_5;
        }
        if (((token === import19.NgFor) && (12 === requestNodeIndex))) {
            return this._NgFor_12_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepicker0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = (this.context.navigation !== 'none');
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_8_0_0 = ((this.context.navigation !== 'select') || (this.context.displayMonths > 1));
        this._NgIf_8_6.check_ngIf(currVal_8_0_0, throwOnChange, false);
        this._NgIf_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        var currVal_12_0_0 = this.context.months;
        this._NgFor_12_6.check_ngForOf(currVal_12_0_0, throwOnChange, false);
        this._NgFor_12_6.ngDoCheck(this, this._anchor_12, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
        this._vc_12.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbDatepicker0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
        this._vc_3.destroyNestedViews();
        this._vc_8.destroyNestedViews();
        this._vc_12.destroyNestedViews();
    };
    View_NgbDatepicker0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_NgbDatepicker1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        if ((nodeIndex == 3)) {
            return new View_NgbDatepicker2(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 8)) {
            return new View_NgbDatepicker3(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        if ((nodeIndex == 12)) {
            return new View_NgbDatepicker5(this.viewUtils, this, 12, this._anchor_12, this._vc_12);
        }
        return null;
    };
    return View_NgbDatepicker0;
}(import2.AppView));
var View_NgbDatepicker1 = (function (_super) {
    __extends(View_NgbDatepicker1, _super);
    function View_NgbDatepicker1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepicker1, renderType_NgbDatepicker, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepicker1.prototype.createInternal = function (rootSelector) {
        this._text_0 = this.renderer.createText(null, '\n       ', null);
        this._el_1 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'ngbDatepickerDayView', ''), null);
        this.compView_1 = new import21.View_NgbDatepickerDayView0(this.viewUtils, this, 1, this._el_1);
        this._NgbDatepickerDayView_1_3 = new import21.Wrapper_NgbDatepickerDayView();
        this.compView_1.create(this._NgbDatepickerDayView_1_3.context);
        this._text_2 = this.renderer.createText(null, '\n    ', null);
        this.init(this._text_2, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2
        ]), null);
        return null;
    };
    View_NgbDatepicker1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import20.NgbDatepickerDayView) && (1 === requestNodeIndex))) {
            return this._NgbDatepickerDayView_1_3.context;
        }
        return notFoundResult;
    };
    View_NgbDatepicker1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context.currentMonth;
        this._NgbDatepickerDayView_1_3.check_currentMonth(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = this.context.date;
        this._NgbDatepickerDayView_1_3.check_date(currVal_1_0_1, throwOnChange, false);
        var currVal_1_0_2 = this.context.disabled;
        this._NgbDatepickerDayView_1_3.check_disabled(currVal_1_0_2, throwOnChange, false);
        var currVal_1_0_3 = this.context.selected;
        this._NgbDatepickerDayView_1_3.check_selected(currVal_1_0_3, throwOnChange, false);
        this._NgbDatepickerDayView_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        this._NgbDatepickerDayView_1_3.checkHost(this, this.compView_1, this._el_1, throwOnChange);
        this.compView_1.detectChanges(throwOnChange);
    };
    View_NgbDatepicker1.prototype.destroyInternal = function () {
        this.compView_1.destroy();
    };
    View_NgbDatepicker1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._text_0, ctx);
        cb(this._el_1, ctx);
        cb(this._text_2, ctx);
    };
    return View_NgbDatepicker1;
}(import2.AppView));
var View_NgbDatepicker2 = (function (_super) {
    __extends(View_NgbDatepicker2, _super);
    function View_NgbDatepicker2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepicker2, renderType_NgbDatepicker, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepicker2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'ngb-datepicker-navigation', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_0 = new import23.View_NgbDatepickerNavigation0(this.viewUtils, this, 0, this._el_0);
        this._NgbDatepickerNavigation_0_3 = new import23.Wrapper_NgbDatepickerNavigation(this.parentView.injectorGet(import10.NgbDatepickerI18n, this.parentIndex), this.parentView.injectorGet(import9.NgbCalendar, this.parentIndex));
        this._text_1 = this.renderer.createText(null, '\n    ', null);
        this.compView_0.create(this._NgbDatepickerNavigation_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'navigate', null, 'select', null), this.eventHandler(this.handleEvent_0));
        this._NgbDatepickerNavigation_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true, true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_NgbDatepicker2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.NgbDatepickerNavigation) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._NgbDatepickerNavigation_0_3.context;
        }
        return notFoundResult;
    };
    View_NgbDatepicker2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = ((this.parentView.context.months[0] == null) ? null : this.parentView.context.months[0].firstDate);
        this._NgbDatepickerNavigation_0_3.check_date(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.parentView.context.disabled;
        this._NgbDatepickerNavigation_0_3.check_disabled(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parentView.context._maxDate;
        this._NgbDatepickerNavigation_0_3.check_maxDate(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parentView.context._minDate;
        this._NgbDatepickerNavigation_0_3.check_minDate(currVal_0_0_3, throwOnChange, false);
        var currVal_0_0_4 = (this.parentView.context.navigation === 'select');
        this._NgbDatepickerNavigation_0_3.check_showSelect(currVal_0_0_4, throwOnChange, false);
        var currVal_0_0_5 = this.parentView.context.showWeekNumbers;
        this._NgbDatepickerNavigation_0_3.check_showWeekNumbers(currVal_0_0_5, throwOnChange, false);
        this._NgbDatepickerNavigation_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_NgbDatepicker2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NgbDatepickerNavigation_0_3.ngOnDestroy();
    };
    View_NgbDatepicker2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepicker2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'navigate')) {
            var pd_sub_0 = (this.parentView.context.onNavigateEvent($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'select')) {
            var pd_sub_1 = (this.parentView.context.onNavigateDateSelect($event) !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    return View_NgbDatepicker2;
}(import2.AppView));
var View_NgbDatepicker3 = (function (_super) {
    __extends(View_NgbDatepicker3, _super);
    function View_NgbDatepicker3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepicker3, renderType_NgbDatepicker, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepicker3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'tr', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import13.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import16.TemplateRef_(this, 2, this._anchor_2);
        this._NgFor_2_6 = new import15.Wrapper_NgFor(this._vc_2.vcRef, this._TemplateRef_2_5, this.parentView.parentView.injectorGet(import17.IterableDiffers, this.parentView.parentIndex), this.parentView.ref);
        this._text_3 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), null);
        return null;
    };
    View_NgbDatepicker3.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import19.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6.context;
        }
        return notFoundResult;
    };
    View_NgbDatepicker3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.parentView.context.months;
        this._NgFor_2_6.check_ngForOf(currVal_2_0_0, throwOnChange, false);
        this._NgFor_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
    };
    View_NgbDatepicker3.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_NgbDatepicker3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepicker3.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_NgbDatepicker4(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_NgbDatepicker3;
}(import2.AppView));
var View_NgbDatepicker4 = (function (_super) {
    __extends(View_NgbDatepicker4, _super);
    function View_NgbDatepicker4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepicker4, renderType_NgbDatepicker, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_NgbDatepicker4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', new import3.InlineArray2(2, 'class', 'text-xs-center font-weight-bold'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_NgbDatepicker4.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(2, '\n          ', this.parentView.parentView.context.i18n.getMonthName(this.context.$implicit.number), ' ', this.context.$implicit.year, '\n        ');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_NgbDatepicker4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NgbDatepicker4;
}(import2.AppView));
var View_NgbDatepicker5 = (function (_super) {
    __extends(View_NgbDatepicker5, _super);
    function View_NgbDatepicker5(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NgbDatepicker5, renderType_NgbDatepicker, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_NgbDatepicker5.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'td', new import3.InlineArray2(2, 'class', 'pl-1 month'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n          ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'ngb-datepicker-month-view', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_2 = new import25.View_NgbDatepickerMonthView0(this.viewUtils, this, 2, this._el_2);
        this._NgbDatepickerMonthView_2_3 = new import25.Wrapper_NgbDatepickerMonthView(this.parentView.parentView.injectorGet(import10.NgbDatepickerI18n, this.parentView.parentIndex));
        this._text_3 = this.renderer.createText(null, '\n          ', null);
        this.compView_2.create(this._NgbDatepickerMonthView_2_3.context);
        this._text_4 = this.renderer.createText(this._el_0, '\n        ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray2(2, 'select', null), this.eventHandler(this.handleEvent_2));
        this._NgbDatepickerMonthView_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4
        ]), [disposable_0]);
        return null;
    };
    View_NgbDatepicker5.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.NgbDatepickerMonthView) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgbDatepickerMonthView_2_3.context;
        }
        return notFoundResult;
    };
    View_NgbDatepicker5.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = (this.parentView.context.dayTemplate || this.parentView._TemplateRef_1_4);
        this._NgbDatepickerMonthView_2_3.check_dayTemplate(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.context.disabled;
        this._NgbDatepickerMonthView_2_3.check_disabled(currVal_2_0_1, throwOnChange, false);
        var currVal_2_0_2 = this.context.$implicit;
        this._NgbDatepickerMonthView_2_3.check_month(currVal_2_0_2, throwOnChange, false);
        var currVal_2_0_3 = ((this.parentView.context.displayMonths === 1) ? this.parentView.context.outsideDays : 'hidden');
        this._NgbDatepickerMonthView_2_3.check_outsideDays(currVal_2_0_3, throwOnChange, false);
        var currVal_2_0_4 = this.parentView.context.model;
        this._NgbDatepickerMonthView_2_3.check_selectedDate(currVal_2_0_4, throwOnChange, false);
        var currVal_2_0_5 = this.parentView.context.showWeekdays;
        this._NgbDatepickerMonthView_2_3.check_showWeekdays(currVal_2_0_5, throwOnChange, false);
        var currVal_2_0_6 = this.parentView.context.showWeekNumbers;
        this._NgbDatepickerMonthView_2_3.check_showWeekNumbers(currVal_2_0_6, throwOnChange, false);
        this._NgbDatepickerMonthView_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this.compView_2.detectChanges(throwOnChange);
    };
    View_NgbDatepicker5.prototype.destroyInternal = function () {
        this.compView_2.destroy();
        this._NgbDatepickerMonthView_2_3.ngOnDestroy();
    };
    View_NgbDatepicker5.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NgbDatepicker5.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'select')) {
            var pd_sub_0 = (this.parentView.context.onDateSelect($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_NgbDatepicker5;
}(import2.AppView));
//# sourceMappingURL=datepicker.ngfactory.js.map